name: 'Push to production'
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: db/Dockerfile-prod
            image: 'starfish-db'
            folder: 'db'
          - dockerfile: game/Dockerfile-prod
            image: 'starfish-game'
            folder: 'game'
          - dockerfile: discord/Dockerfile-prod
            image: 'starfish-discord'
            folder: 'discord'
          - dockerfile: frontend/Dockerfile-prod
            image: 'starfish-frontend'
            folder: 'frontend'
          - dockerfile: nginx/Dockerfile-prod
            image: 'starfish-nginx'
            folder: 'nginx'
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '${{matrix.folder}}/**'
              - common/**

      - name: Check Out Repo
        if: steps.changes.outputs.src == 'true'
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.changes.outputs.src == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.folder }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-${{ matrix.folder }}-

      - name: Build and push Docker images
        if: steps.changes.outputs.src == 'true'
        id: dockerbuild
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: starfishgame/${{ matrix.image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: steps.dockerbuild.outcome == 'success' && steps.changes.outputs.src == 'true'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update-prod:
    needs: [build-and-push]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Pull latest images to host VM and restart containers
        uses: garygrossgarten/github-action-ssh@v0.6.4
        id: produp
        with:
          command: |
            cd starfish;
            git pull;
            docker-compose -f docker-compose-prod.yml pull;
            export NEW_RELIC_LICENSE_KEY="${{ secrets.NEW_RELIC_LICENSE_KEY }}";
            export NEW_RELIC_APP_NAME_GAME="${{ secrets.NEW_RELIC_APP_NAME_GAME }}";
            docker-compose -f docker-compose-prod.yml up -d;
            docker image prune -f
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME}}
          privateKey: ${{ secrets.HOST_PRIVATE_KEY}}
