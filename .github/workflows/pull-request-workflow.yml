name: Pull Request
on:
  pull_request:
    branches:
      - '*'
jobs:
  docker-build-publish:
    needs: npm-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: db/Dockerfile-prod
            image: 'starfish-db'
            folder: 'db'
          - dockerfile: game/Dockerfile-prod
            image: 'starfish-game'
            folder: 'game'
          - dockerfile: discord/Dockerfile-prod
            image: 'starfish-discord'
            folder: 'discord'
          - dockerfile: frontend/Dockerfile-prod
            image: 'starfish-frontend'
            folder: 'frontend'
          - dockerfile: nginx/Dockerfile-prod
            image: 'starfish-nginx'
            folder: 'nginx'

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '${{matrix.folder}}/**'
              - common/**

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build and push Docker images
        id: dockerbuild
        if: steps.changes.outputs.src == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: starfishgame/${{ matrix.image }}:pull-request-${{ github.event.number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: steps.dockerbuild.outcome == 'success'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
