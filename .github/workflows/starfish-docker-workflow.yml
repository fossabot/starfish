name: Starfish build/push

on:
  push:
    branches:
      - "*"
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - dockerfile: db/Dockerfile-prod
           image: "starfish-db"
         - dockerfile: game/Dockerfile-prod
           image: "starfish-game"
         - dockerfile: discord/Dockerfile-prod
           image: "starfish-discord"
         - dockerfile: frontend/Dockerfile-prod
           image: "starfish-frontend"
         - dockerfile: nginx/Dockerfile-prod
           image: "starfish-nginx"

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2
      
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{secrets.github_token}}        

      - name: Generate tags
        id: docker_tags
        uses: dnaka91/action-docker-tags@v0.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1


      - name: Build Docker images and push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Pull latest images to host VM and restart containers
        uses: garygrossgarten/github-action-ssh@v0.6.3
        with:
          command: |
            for image in db discord frontend game nginx; do
              docker image pull starfishgame/starfish-$image:latest
            done;
            cd starfish/docker-compose -f docker-compose-prod.yml up
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME}}
          privateKey: ${{ secrets.HOST_PRIVATE_KEY}}
