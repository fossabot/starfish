import { Game } from '../../Game';
import { Faction } from '../Faction';
import { Engine } from '../Item/Engine';
import { Item } from '../Item/Item';
import { Weapon } from '../Item/Weapon';
import { Planet } from '../Planet';
import { Cache } from '../Cache';
import { AttackRemnant } from '../AttackRemnant';
import type { CrewMember } from '../CrewMember/CrewMember';
import type { CombatShip } from './CombatShip';
import { addWeapon, addEngine, removeItem, equipLoadout } from './addins/items';
import { move, stop, isAt, applyTickOfGravity } from './addins/motion';
export declare class Ship {
    static maxPreviousLocations: number;
    readonly name: string;
    planet: Planet | false;
    readonly faction: Faction | false;
    readonly game: Game;
    toUpdate: Partial<ShipStub>;
    visible: {
        ships: Ship[];
        planets: Planet[];
        caches: Cache[];
        attackRemnants: AttackRemnant[];
    };
    readonly seenPlanets: Planet[];
    readonly weapons: Weapon[];
    readonly engines: Engine[];
    readonly previousLocations: CoordinatePair[];
    id: string;
    location: CoordinatePair;
    velocity: CoordinatePair;
    speed: number;
    direction: number;
    human: boolean;
    attackable: boolean;
    _hp: number;
    _maxHp: number;
    dead: boolean;
    obeysGravity: boolean;
    constructor({ name, faction, loadout, seenPlanets, location, }: BaseShipData, game: Game);
    identify(): void;
    tick(): void;
    get items(): Item[];
    addWeapon: typeof addWeapon;
    addEngine: typeof addEngine;
    removeItem: typeof removeItem;
    equipLoadout: typeof equipLoadout;
    sightRadius: number;
    lastMoveAngle: number;
    get canMove(): boolean;
    move: typeof move;
    stop: typeof stop;
    isAt: typeof isAt;
    applyTickOfGravity: typeof applyTickOfGravity;
    membersIn(l: CrewLocation): CrewMember[];
    cumulativeSkillIn(l: CrewLocation, s: SkillName): number;
    canAttack(s: CombatShip): boolean;
    get maxHp(): number;
    recalculateMaxHp(): void;
    get hp(): number;
    set hp(newValue: number);
}
//# sourceMappingURL=Ship.d.ts.map